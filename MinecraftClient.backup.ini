# Файл конфигурации запуска
# Пожалуйста, не записывайте посторонние данные в этот файл, так как он будет перезаписан MCC.
# 
# Новый клиент консоли Minecraft? Посмотрите этот документ: https://mccteam. ithub.io/g/conf.html
# Хотите перейти на новую версию? Смотрите https://github.com/MCCTeam/Minecraft-Console-Client/#download
[Head]
"Current Version" = "GitHub build 227, built on 2023-08-02 from commit a8200b6"
"Latest Version" = "GitHub build 227, built on 2023-08-02"

[Main]
[Main.General]
Account = { Login = "Ostrovnoy", Password = "-" }     # Login=Email or Name. Use "-" as password for offline mode. Leave blank to prompt user on startup.
Server = { Host = "play.countrymc.net" }    # The address of the game server, "Host" can be filled in with domain name or IP address. (The "Port" field can be deleted, it will be resolved automatically)
AccountType = "microsoft"                   # Account type: "mojang" OR "microsoft". Also affects interactive login in console.
Method = "mcc"                              # Microsoft Account sign-in method: "mcc" OR "browser". If the login always fails, please try to use the "browser" once.

# Make sure you understand what each setting does before changing anything!
[Main.Advanced]
Language = "ru_ru"                          # Fill in with in-game locale code, check https://mccteam.github.io/r/l-code.html
LoadMccTranslation = true                   # Load translations applied to MCC when available, turn it off to use English only.
ConsoleTitle = "%username%@%serverip% - Minecraft Console Client"
InternalCmdChar = "slash"                   # Используйте "none", "slash"(/) или "backslash"(\).
MessageCooldown = 1.0                       # Controls the minimum interval (in seconds) between sending each message to the server.
BotOwners = [ "player1", "player2", ]       # Set the owner of the bot. /!\ Server admins can impersonate owners!
MinecraftVersion = "auto"                   # Используйте "auto" или "1.X.X". Позволяет пропустить получение информации о сервере.
EnableForge = "no"                          # Используйте "auto", "no" или "force". Принудительный режим (force) работает только для Майнкрафта 1.13+.
BrandInfo = "mcc"                           # Используйте "mcc", "vanilla" или "none". Так MCC показывает имя клиента для сервера.
ChatbotLogFile = ""                         # Leave empty for no logfile.
PrivateMsgsCmdName = "tell"                 # Для дистанционного управления ботом.
ShowSystemMessages = true                   # System messages for server ops.
ShowXPBarMessages = true                    # Messages displayed above xp bar, set this to false in case of xp bar spam.
ShowChatLinks = true                        # Decode links embedded in chat messages and show them in console.
ShowInventoryLayout = true                  # Show inventory layout as ASCII art in inventory command.
TerrainAndMovements = true                  # Uses more ram, cpu, bandwidth but allows you to move around.
MoveHeadWhileWalking = true                 # Enable head movement while walking to avoid anti-cheat triggers.
MovementSpeed = 2                           # A movement speed higher than 2 may be considered cheating.
TemporaryFixBadpacket = false               # Temporary fix for Badpacket issue on some servers. Need to enable "TerrainAndMovements" first.
InventoryHandling = true                    # Toggle inventory handling.
EntityHandling = true                       # Обработка сущностей.
SessionCache = "disk"                       # Как сохранять токены сессий. Используйте "none", "memory" или "disk".
ProfileKeyCache = "disk"                    # How to retain profile key. Use "none", "memory" or "disk".
ResolveSrvRecords = "fast"                  # Используйте "no", "fast" (задержка в 5сек.), или "yes". Требуется для присоединения к некоторым серверам.
PlayerHeadAsIcon = true                     # Only works on Windows XP-8 or Windows 10 with old console.
ExitOnFailure = false                       # Whether to exit directly when an error occurs, for using MCC in non-interactive scripts.
CacheScript = true                          # Кэшировать скрипты для ускорения загрузки на слабых устройствах.
Timestamps = false                          # Prepend timestamps to chat messages.
AutoRespawn = false                         # Toggle auto respawn if client player was dead (make sure your spawn point is safe).
MinecraftRealms = false                     # Enable support for joining Minecraft Realms worlds.
TcpTimeout = 30                             # Customize the TCP connection timeout with the server. (in seconds)
EnableEmoji = true                          # If turned off, the emoji will be replaced with a simpler character (for /chunk status).
MinTerminalWidth = 16                       # The minimum width used when calculating the image size from the width of the terminal.
MinTerminalHeight = 10                      # The minimum height to use when calculating the image size from the height of the terminal.
IgnoreInvalidPlayerName = true              # Ignore invalid player name
# AccountList: It allows a fast account switching without directly using the credentials
# Usage examples: "/tell <mybot> reco Player2", "/connect <serverip> Player1"
[Main.Advanced.AccountList]
AccountNikename1 = { Login = "playerone@email.com", Password = "thepassword" }
AccountNikename2 = { Login = "TestBot", Password = "-" }

# ServerList: It allows an easier and faster server switching with short aliases instead of full server IP
# Aliases cannot contain dots or spaces, and the name "localhost" cannot be used as an alias.
# Usage examples: "/tell <mybot> connect Server1", "/connect Server2"
[Main.Advanced.ServerList]
ServerAlias1 = { Host = "mc.awesomeserver.com" }
ServerAlias2 = { Host = "192.168.1.27", Port = 12345 }



# Chat signature related settings (affects minecraft 1.19+)
[Signature]
LoginWithSecureProfile = true               # Microsoft accounts only. If disabled, will not be able to sign chat and join servers configured with "enforce-secure-profile=true"
SignChat = true                             # Whether to sign the chat send from MCC
SignMessageInCommand = true                 # Whether to sign the messages contained in the commands sent by MCC. For example, the message in "/msg" and "/me"
MarkLegallySignedMsg = true                 # Use green  color block to mark chat with legitimate signatures
MarkModifiedMsg = true                      # Use yellow color block to mark chat that have been modified by the server.
MarkIllegallySignedMsg = true               # Use red    color block to mark chat without legitimate signature
MarkSystemMessage = true                    # Use gray   color block to mark system message (always without signature)
ShowModifiedChat = true                     # Set to true to display messages modified by the server, false to display the original signed messages
ShowIllegalSignedChat = true                # Whether to display chat and messages in commands without legal signatures

# Этот параметр затрагивает только сообщения в консоли.
[Logging]
DebugMessages = false                       # Пожалуйста, включите это перед отправкой сообщений об ошибках. Спасибо!
ChatMessages = true                         # Показывать сообщения чата сервера.
InfoMessages = true                         # Informative messages. (i.e Most of the message from MCC)
WarningMessages = true                      # Показывать предупреждения.
ErrorMessages = true                        # Показывать ошибки.
ChatFilterRegex = ".*"                      # Regex для фильтрации сообщений чата.
DebugFilterRegex = ".*"                     # Слово-фильтр для отладочного сообщений
FilterMode = "disable"                      # "disable" or "blacklist" OR "whitelist". Blacklist hide message match regex. Whitelist show message match regex.
LogToFile = false                           # Логировать сообщения в файл.
LogFile = "console-log.txt"                 # Название файла логов.
PrependTimestamp = false                    # Prepend timestamp to messages in log file.
SaveColorCodes = false                      # Keep color codes in the saved text.(look like "§b")

[Console]
[Console.General]
ConsoleColorMode = "vt100_24bit"            # Используйте "disable", "legacy_4bit", "vt100_4bit", "vt100_8bit" или "vt100_24bit". Если в терминале появляется испорченный код по типу "←[0m", вы можете попробовать переключиться на режим "legacy_4bit", или просто отключить это.
Display_Input = true                        # Вы можете использовать "Ctrl+P" для вывода текущего ввода и позиции курсора
History_Input_Records = 32                  # Console.General.History_Input_Records

# Настройки для предложений завершения команд.
# Пользовательские цвета доступны только при использовании цветового режима "vt100_24bit".
[Console.CommandSuggestion]
Enable = true                               # Показывать ли предложения команд в консоли.
Enable_Color = true
Use_Basic_Arrow = false                     # Включите эту опцию, если в терминале неправильно отображаются стрелки в подсказках команд.
Max_Suggestion_Width = 30
Max_Displayed_Suggestions = 6
Text_Color = "#f8fafc"
Text_Background_Color = "#64748b"
Highlight_Text_Color = "#334155"
Highlight_Text_Background_Color = "#fde047"
Tooltip_Color = "#7dd3fc"
Highlight_Tooltip_Color = "#3b82f6"
Arrow_Symbol_Color = "#d1d5db"


[AppVar]
# могут быть использованы в других полях как %yourvar%
# %username% и %serverip% являются зарезервированными переменными.
[AppVar.VarStirng]
your_var = "your_value"
"your var 2" = "your value 2"


# Connect to a server via a proxy instead of connecting directly
# If Mojang session services are blocked on your network, set Enabled_Login=true to login using proxy.
# If the connection to the Minecraft game server is blocked by the firewall, set Enabled_Ingame=true to use a proxy to connect to the game server.
# /!\ Make sure your server rules allow Proxies or VPNs before setting enabled=true, or you may face consequences!
[Proxy]
Enabled_Update = false                      # Whether to download MCC updates via proxy.
Enabled_Login = true                        # Whether to connect to the login server through a proxy.
Enabled_Ingame = true                       # Whether to connect to the game server through a proxy.
Server = { Host = "46.8.223.9", Port = 5501 } # Proxy server must allow HTTPS for login, and non-443 ports for playing.
Proxy_Type = "SOCKS5"                       # Supported types: "HTTP", "SOCKS4", "SOCKS4a", "SOCKS5".
Username = "5FlkroD"                        # Only required for password-protected proxies.
Password = "Proxysoxybot"                   # Only required for password-protected proxies.

# Settings below are sent to the server and only affect server-side things like your skin.
[MCSettings]
Enabled = true                              # If disabled, settings below are not sent to the server.
Locale = "en_US"                            # Use any language implemented in Minecraft.
RenderDistance = 8                          # Значение: [0 - 255].
Difficulty = "peaceful"                     # MC 1.7- difficulty. "peaceful", "easy", "normal", "difficult".
ChatMode = "enabled"                        # Use "enabled", "commands", or "disabled". Allows to mute yourself...
ChatColors = true                           # Allows disabling chat colors server-side.
MainHand = "left"                           # MC 1.9+ main hand. "left" or "right".
[MCSettings.Skin]
Cape = true
Hat = true
Jacket = false
Sleeve_Left = false
Sleeve_Right = false
Pants_Left = false
Pants_Right = false


# MCC хорошо обнаруживает сообщения в чате, но у некоторых серверов есть необычные форматы чата.
# Когда это происходит, вам нужно настроить формат чата ниже, смотрите https://mccteam.github.io/g/conf/#chat-format-section
[ChatFormat]
Builtins = true                             # Поддержка MCC для общих форматов сообщений. Установите "false", чтобы избежать конфликтов с пользовательскими форматами.
UserDefined = false                         # Использовать ли настраиваемые регулярные выражения ниже для обнаружения.
Public = "^<([a-zA-Z0-9_]+)> (.+)$"
Private = "^([a-zA-Z0-9_]+) whispers to you: (.+)$"
TeleportRequest = '^([a-zA-Z0-9_]+) has requested (?:to|that you) teleport to (?:you|them)\.$'

# ================================= #
#  Minecraft Console Client Боты #
# =========================================== #
[ChatBot]
# Получайте оповещение об обнаружении указанных слов в чате
# Полезно для модерирования вашего сервера или обнаружения когда кто-то обращается к вам
[ChatBot.Alerts]
Enabled = false
Beep_Enabled = true                         # Воспроизвести звук "beep" при обнаружении слова в дополнение к выделению.
Trigger_By_Words = false                    # Запускает оповещение после получения указанного ключевого слова.
Trigger_By_Rain = false                     # Уведомление, когда дождь начинается и когда останавливается.
Trigger_By_Thunderstorm = false             # Уведомление о начале и конце грозы.
Log_To_File = false                         # Записывать информацию об оповещениях в файл.
Log_File = "alerts-log.txt"                 # Имя файла, в котором будет записан журнал оповещений.
# Список слов/строк, которые оповещают вас.
Matches = [ "Yourname", " whispers ", "-> me", "admin", ".com", ]
# Список слов/строк, которые НЕ оповещают вас.
Excludes = [ "myserver.com", "Yourname>:", "Player Yourname", "Yourname joined", "Yourname left", "[Lockette] (Admin)", " Yourname:", "Yourname is", ]

# Отправьте команду на регулярной или случайной основе или заставьте бота случайным образом ходить около, чтобы избежать автоматического разъединения из-за AFK
# /! Убедитесь, что ваши правила сервера не запрещают анти-AFK механизмы!
# /!\ Убедитесь, что вы держите бота в закрытом пространстве, чтобы избежать его блуждания если вы используете "terrain handling"! (Рекомендуемый размер 5x5x5)
[ChatBot.AntiAFK]
Enabled = false
Delay = { min = 60.0, max = 60.0 }          # Период выполнения. (в секундах)
Command = "/ping"                           # Команда для отправки на сервер.
Use_Sneak = false                           # Красться при отправке команды.
Use_Terrain_Handling = false                # Использовать "terrain handling" чтобы бот перемещался около места старта.
Walk_Range = 5                              # Размер, в котором бот может двигаться случайным образом (Примечание: чем больше расстояние, тем медленнее бот будет)
Walk_Retries = 20                           # Количество неудачных попыток перед тем как бот начнет использовать командный метод.

# Автоматически атаковать враждебных существ около вас.
# Вам нужно включить "Entity Handling" чтобы использовать этого бота.
# /!\ Убедитесь что правила сервера позволяют вам пользоваться авто атакой
# /!\ ПЛАГИНЫ СЕРВЕРА могут рассмотреть авто атаку как ЧИТ МОД и ПРИНЯТЬ МЕРЫ ПРОТИВ ВАШЕГО АККАУНТА так что ДВАДЖЫ ПРОВЕРЬТЕ ПРАВИЛА СЕРВЕРА
[ChatBot.AutoAttack]
Enabled = false
Mode = "single"                             # «одиночный» или «мульти». одиночная цель по одному мобу за атаку. Уничтожайте всех мобов в радиусе действия за атаку
Priority = "distance"                       # "здоровье" или "расстояние". Требуется только при использовании единого режима
Cooldown_Time = { Custom = false, value = 1.0 } # Как долго ждать между каждой атакой. Поставьте "Custom = false" чтобы "MCC" посчитал за вас.
Interaction = "Attack"                      # Возможные значения: "Interact"(взаимодействовать), "Attack" ((Атаковать)по умолчанию), "InteractAt" (Взаимодействие и атака).
Attack_Range = 4.0                          # Диапазон от 1 до 4
Attack_Hostile = true                       # Разрешить атаковать враждебных существ.
Attack_Passive = false                      # Разрешить атаковать пассивных существ.
List_Mode = "whitelist"                     # Ведь мы рассматриваем список сущностей как «белый» или «черный список».
Entites_List = [ "Zombie", "Cow", ]         # Все типы существ можно найти тут: https://mccteam.github.io/r/entity/#L15

# Автоматически создавать предметы в вашем инвентаре.
# Смотри https://mccteam.github.io/g/bots/#auto-craft чтобы понять как пользоваться.
# Вам нужно включить "Inventory Handling" Чтобы использовать этого бота.
# Вам также нужно включить "Terrain and Movements" если вам нужно использовать верстак
[ChatBot.AutoCraft]
Enabled = false
CraftingTable = { X = 123.0, Y = 65.0, Z = 456.0 } # Местоположение таблицы крафта, если вы хотите использовать его. Необходимо включить ландшафт и движения.
OnFailure = "abort"                         # Что делать при сбое создания, "прервать" или "ждать".
# Recipes.Name: Имя может быть любым какое вам понравится главное чтоб вы понимали что это за рецепт
# Recipes.Type: Использовать верстак(table) или верстак в инвентаре игрока(player)
# Recipes.Result: Получившийся предмет
# Recipes.Slots: Все ячейки, начинающиеся с левого к правому, верхнего к нижнему. Пожалуйста заполните "Null" для пустой ячейки.
# Название предметов см. https://mccteam.github.io/r/item/#L12

[[ChatBot.AutoCraft.Recipes]]
Name = "Recipe-Name-1"
Type = "player"
Result = "StoneBricks"
Slots = [ "Stone", "Stone", "Stone", "Stone", ]

[[ChatBot.AutoCraft.Recipes]]
Name = "Recipe-Name-2"
Type = "table"
Result = "StoneBricks"
Slots = [ "Stone", "Stone", "Null", "Stone", "Stone", "Null", "Null", "Null", "Null", ]


# Автоматическое копание блоков.
# Вам нужно включить "Terrain Handling" чтобы использовать этого бота.
# Вы можете использовать "/digbot stop" и "/digbot start" чтобы контролировать конец и начало автоматического копания.
# Поскольку MCC пока не поддерживает точное определение размера блоков, все блоки считаются целыми при определении позиции.
# Для названий блоков см. https://mccteam.github.io/r/block/#L15
[ChatBot.AutoDig]
Enabled = false
Mode = "lookat"                             # «взгляд», «фиксированные» или «обои». Подогнать посмотревший блок, блок в фиксированном положении, или блок, который должен быть полностью удовлетворен.
# Положение блоков при использовании "фиксированных" или "обоих" режимов.
Locations = [
	{ x = 123.5, y = 64.0, z = 234.5 },
	{ x = 124.5, y = 63.0, z = 235.5 },
]
Location_Order = "distance"                 # "Расстояние" или "индекс", при использовании режима "фиксированные" блоки определяются по расстоянию до игрока или по порядку в списке.
Auto_Start_Delay = 3.0                      # Сколько секунд ждать после входа в игру начнёт рычать автоматически, установите -1 для отключения автоматического запуска.
Dig_Timeout = 60.0                          # Добыча блока на более чем "Dig_Timeout" секунд будет считаться таймаут.
Log_Block_Dig = true                        # Выводить журналы при копании блоков.
List_Type = "whitelist"                     # Ведь список блоков рассматривается как "белый список" или как "черный список".
Blocks = [ "Cobblestone", "Stone", ]

# Автоматически выбрасывать предметы из инвентаря
# Вам нужно включить 'Inventory Handling' для использования этого бота
# Смотрите этот файл для обновленного списка предметов которые вы можете использовать вместе с этим ботом: https://mccteam.github.io/r/item/#L12
[ChatBot.AutoDrop]
Enabled = false
Mode = "include"                            # Включите, чтобы включить "включительно", "исключить" или "всего". Включает: выбросить элемент в список. Исключить: исключить элемент НЕ В списке
Items = [ "Cobblestone", "Dirt", ]

# Автоматически съедайте еду, когда ваш голод имеет низкое значение
# Вам нужно включить обработку инвентаря, чтобы использовать этого бота
[ChatBot.AutoEat]
Enabled = false
Threshold = 6

# Автоматически ловить рыбу, используя удочку
# Руководство: https://mccteam.github.io/g/bots/#auto-fishing
# Вы можете использовать "/fish" для ручного управления ботом.
# /!\ Убедитесь, что правила сервера позволяют вам использовать автоматическую рыбалку перед использованием этого бота
[ChatBot.AutoFishing]
Enabled = false
Antidespawn = false                         # Сохраните это как ложь, если вы не изменили его раньше.
Mainhand = true                             # Используйте mainhand или offhand для удержания стержня.
Auto_Start = true                           # Начинать рыбалку автоматически после входа в мир.
Cast_Delay = 0.4                            # Как быстро заново забросить после успешного клюва.
Fishing_Delay = 3.0                         # Как долго после входа в игру начать рыбалку (в секундах).
Fishing_Timeout = 300.0                     # Тайм-аут рыбалки (в секундах). Тайм-аут вызовет повторный выстрел.
Durability_Limit = 2.0                      # Не будет использовать удочки с меньшей прочностью (полная прочность 64). Установите ноль, чтобы отключить эту функцию.
Auto_Rod_Switch = true                      # Переключиться на новую удочку из инвентаря после того, как текущая удочка недоступна.
Stationary_Threshold = 0.001                # Движение крюка по оси X и Z меньше, чем это значение будет считаться стационарным.
Hook_Threshold = 0.2                        # "Неподвижный" крюк, который движется выше этого порога в оси Y, будет считаться пойманным рыбу.
Log_Fish_Bobber = false                     # Используется для регулировки выше двух пороговых значений,, который при включении будет напечатать изменения в положении рыболовецкой сущности после получения ее передвижения.
Enable_Move = false                         # Это позволяет игроку изменить положение или положение перед каждой рыбной ловлей.
# Порядок "1->2->3->4->3->2->1->2->. " и может изменять положение или облицовку или обе стороны. Рекомендуется изменить только облицовочное положение.

[[ChatBot.AutoFishing.Movements]]
facing = { yaw = 12.34, pitch = -23.45 }

[[ChatBot.AutoFishing.Movements]]
XYZ = { x = 123.45, y = 64.0, z = -654.32 }
facing = { yaw = -25.14, pitch = 36.25 }

[[ChatBot.AutoFishing.Movements]]
XYZ = { x = -1245.63, y = 63.5, z = 1.2 }


# Автоматически перерегистрировать при отключении сервера, например, потому что сервер снова
# /! Использовать Ignore_Kick_Message=true на свой риск! Сотрудники сервера могут не оценить, если вы автоматически переходите в систему вручную
[ChatBot.AutoRelog]
Enabled = false
Delay = { min = 3.0, max = 3.0 }            # Задержка при подключении к серверу. (в секундах)
Retries = 3                                 # Повторяет при сбое записи на сервер. Используйте -1 для неограниченного просмотра.
Ignore_Kick_Message = false                 # Если установлено значение true, то авторелог будет переподключаться вне зависимости от ударов сообщений.
# Если выпадающее сообщение совпадает с любой из строк, то будет срабатывать авторелог.
Kick_Messages = [ "Connection has been lost", "Server is restarting", "Server is full", "Too Many people", ]

# Выполняйте команды или отправляйте сообщения автоматически при обнаружении указанного шаблона в чате
# Администраторы сервера могут воспринимать сообщения чата (/nick, /tellraw) так что помните об этом при внедрении правил AutoRespond
# /! Этот бот может получить спам в зависимости от ваших правил, хотя глобальный параметр messagecooldown может помочь вам избежать случайного спама
[ChatBot.AutoRespond]
Enabled = false
Matches_File = "matches.ini"
Match_Colors = false                        # Не удаляйте цвета из текста (Примечание: ваши совпадения будут включать цветовые коды (те, которые используют § символ) для работы)

# Записывает сообщения чата в файле на диске.
[ChatBot.ChatLog]
Enabled = false
Add_DateTime = true
Log_File = "chatlog-%username%-%serverip%.txt"
Filter = "messages"

# Этот бот позволяет вам отправлять и получать сообщения и команды через канал Discord.
# Для установки вы можете использовать документацию или прочитать здесь (Документация включает в себя изображения).
# Документация: https://mccteam.github.io/g/bots/#discord-bridge
# Настройка:
# Сначала вам нужно создать бота на портале разработчиков Discord, видео урок: https://www.youtube.com/watch?v=2FgMnZViNPA .
# /!\ ВАЖНОЙ /! : При создании бота, вы ДОЛЖНЫ ВКЛЮЧИТЬ "Message Content Intent", "Intent" и "Presence Intent" для работы бота! Также читайте внимательно, не пропустите никаких шагов!
# При создании бота скопируйте сгенерированный токен и вставьте его здесь, в поле "Token" (токены важны, сохраняйте их в безопасности).
# Скопируйте "ID приложения" и перейдите по ссылке: https://discordapi.com/permissions.html .
# Вставьте идентификатор, который вы скопировали и проверьте поле «Администратор» в разрешениях, затем нажмите на ссылку внизу.
# Это откроет меню приглашений ваших серверов, выберите сервер, на который вы хотите пригласить бота и пригласите его.
# После того, как вы пригласили бота, перейдите к вашему клиенту Discord и перейдите в Настройки ; Расширенные и включите "Режим разработчика".
# Выйдите из настроек и щелкните правой кнопкой мыши на сервере, который вы пригласили бота в список серверов, затем нажмите "Copy ID" и вставьте идентификатор здесь в "GuildId".
# Затем нажмите правой кнопкой мыши на канале, где вы хотите взаимодействовать с ботом и правой кнопкой мыши - "Copy ID", поместите здесь скопированный идентификатор в "ChannelId".
# И в конце, отправьте сообщение в канале, щелкните правой кнопкой мыши по нику и снова правой кнопкой мыши - "Copy ID", затем вставьте идентификатор здесь в "OwnersIds".
# Как использовать:
# Для выполнения MCC команды, префикс с точкой". , пример: ".move 143 64 735" .
# Чтобы отправить сообщение, просто введите его и нажмите enter.
[ChatBot.DiscordBridge]
Enabled = false
Token = "your bot token here"               # Ваш токен бота Discord.
GuildId = 1018553894831403028               # ID сервера/гильдии, куда вы пригласили бота.
ChannelId = 1018565295654326364             # ID канала, в котором вы хотите взаимодействовать с MCC с помощью бота.
OwnersIds = [ 978757810781323276, ]         # Список идентификаторов людей, которые вы хотите иметь возможность взаимодействовать с MCC с помощью бота.
Message_Send_Timeout = 3                    # Как долго ждать (в секундах), если сообщение не может быть отправлено в discord перед отменой задачи (минимум 1 секунда).
# Форматы сообщений
# Слова, обернутые { и } , будут заменены во время выполнения кода, не меняйте их!
# Например: {message} будет заменен фактическим сообщением, {username} будет заменено на имя пользователя а {timestamp} текущим временем.
# Для форматирования сообщений Discord проверьте следующее: https://mccteam.github.io/r/dc-fmt.html
PrivateMessageFormat = "**[Private Message]** {username}: {message}"
PublicMessageFormat = "{username}: {message}"
TeleportRequestMessageFormat = "A new Teleport Request from **{username}**!"

# Автоматически собирает урожай для вас (растения, ломаются и удобряются костной мукой).
# Доступны типы сельскохозяйственных культур: Свекла, Морковь, Арбуз, Адский Нарост, Тыква, Картошка, Пшеница.
# Использование: команда "/farmer start" и команда "/farmer stop".
# ПРИМЕЧАНИЕ: Это новый бот, он не идеален и был протестирован только в 1.19.2 , некоторые незначительные ошибки, такие как отсутствие способности удобрять костной мукой картошку\морковку иногда.
# или бот прыгает по урожаю и ломает его(это случается редко, но все еще происходит). Мы уже пытаемся исправить это.
# Рекомендуем поставить стены вокруг фермы и сделать ее ровной чтобы избежать возможности бота прыгать.
# Также, если ваша ферма в высоту всего один блок нужно сделать 2 или больше чтобы бот не проваливался при переподключении.
# Бот также не поднимает все предметы, если они улетают в стороны. Мы планируем улучшить это в будущем, так же как и выкладывание ресурсов в сундук и пополнение костной муки.
[ChatBot.Farmer]
Enabled = false
Delay_Between_Tasks = 1.0                   # Задержка между задачами в секундах (минимум 1 секунда)

# Включено для того, чтобы бот следовал за вами
# ПРИМЕЧАНИЕ: Это экспериментальная функция, бот может быть иногда медленным , вам нужно идти с нормальной скоростью, и иногда останавливаться, чтобы бот не отставал от вас .
# Это похоже на то когда животные следуют за игроком когда вы держите еду в руке.
# Это вызвано алгоритмом медленного поиска пути, мы работаем над улучшением
# Вы можете настроить лимит обновлений и найти то, что лучше для вас. (ПРИМЕЧАНИЕ: Но не очень низкий, потому что вы можете достичь противоположного,
# это может забить поток для 'terain handling') и тем самым замедлить бота еще больше.
# /!\ Перед использованием бота убедитесь, что правила сервера позволяют использовать эту опцию
[ChatBot.FollowPlayer]
Enabled = false
Update_Limit = 1.5                          # Скорость вычисления ботом (в секундах) (Вы можете настроить это, если бот слишком медленный)
Stop_At_Distance = 3.0                      # Не ходить за игроком, если он находится в радиусе 3 блоков (мешает боту толкать игрока в бесконечный цикл)

# Небольшая игра для демонстрации взаимодействия в чате. Игроки могут угадать тайные слова по одной букве одновременно.
# Вам нужно корректно работать с ChatFormat и добавить себя в создателей бота, чтобы начать игру с /tell <bot username> 
# /! Этот бот может немного спамить, если с ним взаимодействуют много игроков
[ChatBot.HangmanGame]
Enabled = false
English = true
FileWords_EN = "hangman-en.txt"
FileWords_FR = "hangman-fr.txt"

# Передача сообщений между игроками и серверами, как почтовые ящики
# Этот бот может хранить сообщения, когда получатели не в сети, и отправлять их, когда они присоединяются к серверу
# /! Администраторы сервера могут видеть ваши ЛС (/tellraw, /nick) так что включайте этого бота только если вы доверяете администраторам сервера
[ChatBot.Mailer]
Enabled = false
DatabaseFile = "MailerDatabase.ini"
IgnoreListFile = "MailerIgnoreList.ini"
PublicInteractions = false
MaxMailsPerPlayer = 10
MaxDatabaseSize = 10000
MailRetentionDays = 30

# Позволяет отображать карту в консоли и в изображениях (которые могут быть отправлены в Discord с помощью Discord Bridge Chat Bot)
# Это полезно для решения капчи, которые используют карты.
# Карты отображаются в папке Rendered_Maps если Save_To_File включен.
# ПРИМЕЧАНИЕ:
# Если некоторые серверы имеют очень короткое время для решения капчи, включите Auto_Render_On_Update, чтобы увидеть их сразу в консоли.
# /!\ Убедитесь, что правила сервера позволяют использовать ботов на сервере, или вы рискуете подвергнуться наказанию.
[ChatBot.Map]
Enabled = false
Render_In_Console = true                    # Будет ли отображена карта в консоли.
Save_To_File = false                        # Хранить ли визуализированную карту в качестве файла (Вам нужен этот параметр, если Вы хотите получить карту на Discord, используя Discord Bridge).
Auto_Render_On_Update = false               # Автоматически отобразить карту после ее получения или обновления с сервера
Delete_All_On_Unload = true                 # Удалить все отображаемые карты при выгрузке/перезагрузке или при запуске MCC снова.
Notify_On_First_Update = true               # Получить уведомление, когда вы впервые получаете карту с сервера
Rasize_Rendered_Image = false               # Изменение размера изображения, это полезно, когда изображения отображаются небольшими и когда отправляются в Discord.
Resize_To = 512                             # Размер изображения должен быть изменен в пикселях (например, 512).
# Отправьте отображенную карту (сохраненную в файле) в Discord или Telegram канал через Discord или Telegram chat -bridge (Чат-бот Discord/Telegram Bridge должен быть включен и настроен!)
# Для работы необходимо включить Save_To_File .
# Мы также рекомендуем включить изменение размеров.
Send_Rendered_To_Discord = false
Send_Rendered_To_Telegram = false

# Периодически записывать список игроков в текстовый файл.
[ChatBot.PlayerListLogger]
Enabled = false
File = "playerlog.txt"
Delay = 60.0                                # (В секундах)

# Отправьте MCC консольные команды вашему боту через ЛС (/tell)
# Вам нужно правильно работать с форматом форматом и добавьте себя в создателей бота, чтобы использовать бота
# /! Администраторы сервера могут видеть ваш ЛС (/tellraw, /nick), так что включайте RemoteControl только если вы доверяете администраторам сервера
[ChatBot.RemoteControl]
Enabled = false
AutoTpaccept = true
AutoTpaccept_Everyone = false

# Включите запись игры (/replay start) и повторите ее позже с помощью Replay Mod (https://www.replaymod.com/)
# Пожалуйста, обратите внимание, что из-за технических ограничений игрок (вы) не будете показаны в файле повтора
# /! Вы должны использовать /replay stop или выходить с помощью /quit ИЛИ ФАЙЛ РЕПЛЕЯ МОЖЕТ БЫТЬ СЛОМАН!
[ChatBot.ReplayCapture]
Enabled = false
Backup_Interval = 300.0                     # Насколько длинным должен быть рейплей файл, чтобы сделать автоматическое сохранение, в секундах. Поставьте -1 чтобы отключить.

# Запланировать команды и скрипты, чтобы запускать на различных событиях, таких как присоединение к серверу, дата/время или интервал времени
# Смотрите https://mccteam.github.io/g/bots/#script-scheduler для получения дополнительной информации
[ChatBot.ScriptScheduler]
Enabled = true

[[ChatBot.ScriptScheduler.TaskList]]
Task_Name = "Task Name 1"
Trigger_On_First_Login = true
Trigger_On_Login = false
Trigger_On_Times = { Enable = false, Times = [ 14:00:00, ] }
Trigger_On_Interval = { Enable = false, MinTime = 3.6, MaxTime = 4.8 }
Action = "script login.txt"

[[ChatBot.ScriptScheduler.TaskList]]
Task_Name = "Task Name 2"
Trigger_On_First_Login = false
Trigger_On_Login = true
Trigger_On_Times = { Enable = false, Times = [ ] }
Trigger_On_Interval = { Enable = true, MinTime = 300.0, MaxTime = 450.0 }
Action = "send !<red><bold>Ostrovnoy Controlling The Server"


# Этот бот позволяет вам отправлять и получать сообщения через Телеграм бота или получать сообщения через Телеграм каналы.
# /!\ ЗАМЕТКА. Вы не можете отправлять сообщения и команды из группового канала, вы можете только отправлять боту их в личные сообщения, но вы можете получать сообщения от клиента в групповой канал.
# -----------------------------------------------------------
# Первым делом вам нужно создать Телеграм бота и получить API ключ, так-что зайдите в Телеграм и найдите @botfather
# Нажмите кнопку "Старт" и прочтите что ответит бот, после напишите '/newbot', Botfather подскажет вам как создать бота
# Как только вы создали бота скопируйте API ключ который вы получили и вставьте его в поле "Token" в секции "ChatBot.TelegramBridge"
# /!\ Не делитесь вашим токеном ни с кем. Они смогут получить контроль над вашим ботом. Держите его в безопаности.
# После запустите MCC и зайдите в Телеграм, найдите вашего недавно созданного бота по нику которому вы ему дали и откройте личные сообщения с ним.
# Нажмите кнопку "Start" и отправьте комманду ".chatid" чтобы получить 'chatid'.
# Скопируйте chatid номер (пример 2627844670) и вставьте его в поле "ChannelId" и в поле "Authorized_Chat_Ids"(в этой секции)( ID в поле "Authorized_Chat_Ids" должен быть из цифр) после сохраните файл.
# Теперь вы можете использовать бота использую личные сообщения с ним.
# /!\Если вы не доавбили ID вашего чата с ботом в поле "Authorized_Chat_Ids" , любой кто найдите бота через поиск сможет выполнять команды и отправлять сообщения.
# /!\ ID скопированный в "Authorized_Chat_Ids" должен быть из цифр
# -----------------------------------------------------------
# ЗАМЕТКА: Если вы хочете получать сообщения в групповом канале, сделайте канал временно доступным для всех, пригласите бота и сделайте его администратором, после сделайте канал приватным если нужно.
# После установите поле "ChannelId" тегом @... вашего канала(Поле должно включать в себя @, пример "@supersecretchanel") этот ник вы можете посмотреть в ссылке приглашения в ваш канал.
# /!\ Оставьте только ник с префиксом @, не нужно вставять всю ссылку. К примеру если у вас "https://t.me/mysupersecretchannel", поле "ChannelId" должно быть "@mysupersecretchannel".
# /!\ Заметьте что вы не можете отправлять сообщения для клиента в групповом канале!
# -----------------------------------------------------------
# Как использовать бота:
# Чтобы выполнить MCC команду, добавьте ТОЧКУ(".") перед командой, к примеру ".move 143 64 735" . Чтобы отправить сообщение, просто наберите его и отправьте.
[ChatBot.TelegramBridge]
Enabled = false
Token = "your bot token here"               # Ваш токен Telegram бота.
ChannelId = ""                              # ID канала, в котором вы хотите взаимодействовать с MCC с помощью бота.
Authorized_Chat_Ids = [ ]                   # Список чатов, которым разрешено отправлять сообщения и выполнять команды. Чтобы получить ID вашего чата с ботом используйте команду ".chatid" в Telegram.
Message_Send_Timeout = 3                    # Как долго ждать (в секундах), если сообщение не может быть отправлено в Telegram перед отменой задачи (минимум 1 секунда).
# Форматы сообщений
# Слова, обернутые { и } , будут заменены во время выполнения кода, не меняйте их!
# Например: {message} будет заменен фактическим сообщением, {username} будет заменено на имя пользователя а {timestamp} текущим временем.
# Для формата сообщений Telegram проверьте следующее: https://mccteam.github.io/r/tg-fmt.html
PrivateMessageFormat = "*(Private Message)* {username}: {message}"
PublicMessageFormat = "{username}: {message}"
TeleportRequestMessageFormat = "A new Teleport Request from **{username}**!"

# A Chat Bot that collects items on the ground
[ChatBot.ItemsCollector]
Enabled = false
Collect_All_Item_Types = true               # If set to true, the bot will collect all items, regardless of their type. If you want to use the whitelisted item types, disable this by setting it to false
Items_Whitelist = [ "Diamond", "NetheriteIngot", ] # In this list you can specify which items the bot will collect. To enable this, set the Collect_All_Item_Types to false. (NOTE: This does not prevent the bot from accidentally picking up other items, it only goes to positions where it finds the whitelisted items)\nYou can see the list of item types here: https://raw.githubusercontent.com/MCCTeam/Minecraft-Console-Client/master/MinecraftClient/Inventory/ItemType.cs
Delay_Between_Tasks = 300                   # Delay in milliseconds between bot scanning items (Recommended: 300-500)
Collection_Radius = 30.0                    # The radius in which bot will look for items to collect (Default: 30)
Always_Return_To_Start = true               # If set to true, the bot will return to it's starting position after there are no items to collect
Prioritize_Clusters = false                 # If set to true, the bot will go after clustered items instead for the closest ones

# Remotely control the client using Web Sockets.\n# This is useful if you want to implement an application that can remotely and asynchronously execute procedures in MCC.\n# Example implementation written in JavaScript: https://github.com/milutinke/MCC.js.git\n# The protocol specification will be available in the documentation soon.
[ChatBot.WebSocketBot]
Enabled = false
Ip = "127.0.0.1"                            # The IP address that Websocket server will be bound to.
Port = 8043                                 # The Port that Websocket server will be bounded to.
Password = "17386e3f7aa341c6af80fb5302c891da" # A password that will be used to authenticate on thw Websocket server (It is recommended to change the default password and to set a strong one).
DebugMode = false                           # This setting is for developers who are developing a library that uses this chat bot to remotely execute procedures/commands/functions.



